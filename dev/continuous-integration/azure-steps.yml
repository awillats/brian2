steps:
  - bash: echo "##vso[task.prependpath]$CONDA/Scripts"
    displayName: Add conda to PATH
    condition: eq(variables['agent.os'], 'Windows_NT')
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
    condition: in(variables['agent.os'], 'Darwin', 'Linux')
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda directory
    condition: eq(variables['agent.os'], 'Darwin')

  - bash: |
      conda create --prefix $HOME/test_env -c conda-forge --yes --quiet python=$(python.version) pip pytest
    displayName: 'Setup conda environment'

  - bash: |
      conda install --quiet --yes -c conda-forge llvm-openmp
    displayName: 'Install OpenMP support for clang/llvm'
    condition: eq(variables['agent.os'], 'Darwin')

  - bash: |
      source activate $HOME/test_env
      conda install --quiet --yes -c conda-forge pytest cython sympy future pyparsing numpy jinja2 six scipy sphinx gsl coverage
      pip install .
    displayName: 'Install Brian2'

  - bash: |
      source activate $HOME/test_env
      SOURCE_PATH=$(pwd)
      cd ..  # move out of the source directory to avoid direct import
      coverage run --rcfile=$SOURCE_PATH/.coveragerc $SOURCE_PATH/$(script_name)
    displayName: 'Run tests'

  - bash: |
      # We use the Circle CI support
      pip install coveralls
      cp ../.coverage .
      export CIRCLE_BRANCH=$BUILD_SOURCEBRANCH
      coveralls --rcfile=.coveragerc
    env:
      CIRCLECI: 1
      CIRCLE_BUILD_NUM: $(Build.BuildNumber)
      CIRCLE_BRANCH: $(Build.SourceBranchName)
      COVERALLS_FLAG_NAME: $(matrix)
      COVERALLS_REPO_TOKEN: $(coveralls_repo_token)
      COVERALLS_PARALLEL: true
    displayName: 'Upload coverage data to coveralls'
    condition: eq(variables.upload_coverage, true)
